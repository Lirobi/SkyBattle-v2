plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'fr.lirobi'
version = '2.0'

repositories {
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }

    // Ajout de nouveaux dépôts potentiels
    maven {
        name = 'byteflux-repo'
        url = 'https://repo.byteflux.net/releases'
    }
    maven {
        url 'https://maven.elmakers.com/repository'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-public/'
    }

    mavenCentral()
    mavenLocal()
}

dependencies {
    compileOnly "org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT"
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'


    implementation 'fr.mrmicky:fastboard:2.1.2'
    implementation 'com.comphenix.protocol:ProtocolLib:5.1.0'


}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    destinationDirectory.set(file("$projectDir/server-dev/plugins/"))
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'fr.mrmicky.fastboard', 'fr.lirobi.shaded.fr.mrmicky.fastboard'

}

build.dependsOn shadowJar